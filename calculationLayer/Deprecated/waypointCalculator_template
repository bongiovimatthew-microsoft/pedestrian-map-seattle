// API Key 
mapboxgl.accessToken = 'pk.eyJ1IjoiYm9uZ2lvdmltYXR0aGV3IiwiYSI6ImNqMzU1NXlpYzAyMmwzMm5ya2tuYjNuMWMifQ.cxVuCXpkeTawreTAcEnNnQ';


// Define the map object for route calculation. We set the center and zoom to focus on Seattle.
//  However, the true implementation can use default style and center, as nobody will see the map UI
//   (we may be able to remvoe the "container" element below, which will allow us to remove the div from the HTMl as well)
var map = new mapboxgl.Map({
    container: 'map',
    style: 'mapbox://styles/mapbox/light-v9',
    center: [-122.332433, 47.606003],
    zoom: 12
});

map.on('load', function() {
    map.addLayer({
            "id": "points",
            "type": "symbol",
            "source": {
                "type": "geojson",
                "data": %%data_blob%%
            },
            "layout": {
                "icon-image": "{icon}-15",
                "text-field": "{title}",
                "text-font": ["Open Sans Semibold", "Arial Unicode MS Bold"],
                "text-offset": [0, 0.6],
                "text-anchor": "top"
            }
        });
});


// Define the points to be analyzed 
var points = %%data_blob%%

// Generate a TIN, using the "score" property as the Z value for the points 
var tin = turf.tin(points, 'score')

// Iterate through the TIN polygons, and calculate area and centroid for each 
for(i = 0; i < tin.features.length; i++){
    tin.features[i].properties.area = turf.area(tin.features[i])
    tin.features[i].properties.centroid = turf.centroid(tin.features[i])
}

// Define a compare function to compare TIN polygons by area, from largest to smallest 
function compare(a,b) {
  if (a.properties.area < b.properties.area)
    return 1;
  if (a.properties.area > b.properties.area)
    return -1;
  return 0;
}

// Sort the TIN by polygon area, from largest to smallest 
var sortedTin = tin.features.sort(compare); 

// Take the top 10 centroids and use them as waypoints 
var waypoints = []
for(i = 0; i < 20; i++){
    currCentroid = sortedTin[i].properties.centroid.geometry.coordinates
    waypoints.push(currCentroid)
}

console.log(waypoints)
